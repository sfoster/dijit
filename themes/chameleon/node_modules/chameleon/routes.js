var handleExtension = function(ext){
  switch(ext) {
    case ".css": 
        return "chameleon/css";
    case ".png": 
    case ".jpg": 
    case ".jpeg": 
    case ".gif": 
        return "chameleon/image";
    default: 
        return "chameleon/404";
  }
};

module.exports = function(app, express, context){
  var TMP = function(){}
  var delegate = function(p, args){
    args = args || {};
    TMP.prototype = p;
    var o = new TMP();
    for(var i in args) {
      o[i] = args[i];
    }
    return o;
  }
  
  // Routes
  app.get('/', function(req, res){
    require("chameleon/default")(
      req, res, 
      delegate(context, { express: express })
    );
  });

  // Static resources
  app.get(/^\/dijit\/themes\/chameleon\/(.+$)/, function(req, res){
    var resource = req.params[0].replace(/[\?#].*$/, ''), 
      ext = resource.substring(resource.lastIndexOf('.')), 
      pbag = delegate(context, { resource: resource, ext: ext });
      

    console.log("request for resource: " + req.url + ", resource: " + pbag.resource + ", ext: " + pbag.ext);
    console.log("context has themeDir: " + context.themeDir);

    // get the module we handle this filetype with
    var module = handleExtension(ext);
    // dispatch to the static handler module
    console.log("handling " + resource + " with module: " + module);
    require(module)(req, res, pbag);
  });

  app.get('/preview', function(req, res){
    // templated response, 
    // render the themeTester 
    // passing in template context data
    var data = delegate(context);
    res.render('preview.html', data);
  });

}